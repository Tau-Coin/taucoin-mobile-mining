tasks.whenTaskAdded { task ->
    if(task.name in ['assembleRelease', 'assembleDebug'])
        task.dependsOn downloadIPFSBinaries
}

task downloadIPFSBinaries {
    doLast {
        def version = "v0.4.21"
        def archs = ["arm", "386"]
        def assets = "./src/main/assets"
        def getFile = { arch -> "go-ipfs_${version}_linux-${arch}.tar.gz" }
        def getUrl = { arch ->  "https://dist.ipfs.io/go-ipfs/${version}/go-ipfs_${version}_linux-${arch}.tar.gz" }

        archs.each { arch ->
            def archive = new File(buildDir, getFile(arch))
            download {
                src getUrl(arch)
                dest archive
                overwrite true
            }
            copy {
                from(tarTree(resources.gzip(archive))) {
                    include "go-ipfs/ipfs"
                    eachFile { file ->
                        file.relativePath = new RelativePath(true, file.relativePath.segments.drop(1))
                    }
                    includeEmptyDirs = false
                }
                into assets
                rename "ipfs", arch
            }
        }
    }
}
